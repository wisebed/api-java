
package eu.wisebed.api.wsn;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import eu.wisebed.api.common.Message;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WSN", targetNamespace = "urn:WSNService")
@XmlSeeAlso({
    eu.wisebed.api.wsn.ObjectFactory.class,
    eu.wisebed.api.common.ObjectFactory.class
})
public interface WSN {


    /**
     * 
     * @param controllerEndpointUrl
     */
    @WebMethod
    @RequestWrapper(localName = "addController", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.AddController")
    @ResponseWrapper(localName = "addControllerResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.AddControllerResponse")
    public void addController(
        @WebParam(name = "controllerEndpointUrl", targetNamespace = "")
        String controllerEndpointUrl);

    /**
     * 
     * @param nodes
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "areNodesAlive", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.AreNodesAlive")
    @ResponseWrapper(localName = "areNodesAliveResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.AreNodesAliveResponse")
    public String areNodesAlive(
        @WebParam(name = "nodes", targetNamespace = "")
        List<String> nodes);

    /**
     * 
     * @param targetNode
     * @param sourceNode
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "destroyVirtualLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.DestroyVirtualLink")
    @ResponseWrapper(localName = "destroyVirtualLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SetVirtualLinkResponse")
    public String destroyVirtualLink(
        @WebParam(name = "sourceNode", targetNamespace = "")
        String sourceNode,
        @WebParam(name = "targetNode", targetNamespace = "")
        String targetNode);

    /**
     * 
     * @param node
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "disableNode", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.DisableNode")
    @ResponseWrapper(localName = "disableNodeResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.DisableNodeResponse")
    public String disableNode(
        @WebParam(name = "node", targetNamespace = "")
        String node);

    /**
     * 
     * @param nodeB
     * @param nodeA
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "disablePhysicalLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.DisablePhysicalLink")
    @ResponseWrapper(localName = "disablePhysicalLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.DisablePhysicalLinkResponse")
    public String disablePhysicalLink(
        @WebParam(name = "nodeA", targetNamespace = "")
        String nodeA,
        @WebParam(name = "nodeB", targetNamespace = "")
        String nodeB);

    /**
     * 
     * @param node
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enableNode", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.EnableNode")
    @ResponseWrapper(localName = "enableNodeResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.EnableNodeResponse")
    public String enableNode(
        @WebParam(name = "node", targetNamespace = "")
        String node);

    /**
     * 
     * @param nodeB
     * @param nodeA
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enablePhysicalLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.EnablePhysicalLink")
    @ResponseWrapper(localName = "enablePhysicalLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.EnablePhysicalLinkResponse")
    public String enablePhysicalLink(
        @WebParam(name = "nodeA", targetNamespace = "")
        String nodeA,
        @WebParam(name = "nodeB", targetNamespace = "")
        String nodeB);

    /**
     * 
     * @param programs
     * @param programIndices
     * @param nodeIds
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "flashPrograms", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.FlashPrograms")
    @ResponseWrapper(localName = "flashProgramsResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.FlashProgramsResponse")
    public String flashPrograms(
        @WebParam(name = "nodeIds", targetNamespace = "")
        List<String> nodeIds,
        @WebParam(name = "programIndices", targetNamespace = "")
        List<Integer> programIndices,
        @WebParam(name = "programs", targetNamespace = "")
        List<Program> programs);

    /**
     * 
     * @return
     *     returns java.util.List<eu.wisebed.api.wsn.ChannelHandlerDescription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSupportedChannelHandlers", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetSupportedChannelHandlers")
    @ResponseWrapper(localName = "getSupportedChannelHandlersResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetSupportedChannelHandlersResponse")
    public List<ChannelHandlerDescription> getSupportedChannelHandlers();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFilters", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetFilters")
    @ResponseWrapper(localName = "getFiltersResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetFiltersResponse")
    public List<String> getFilters();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNetwork", targetNamespace = "urn:CommonTypes", className = "eu.wisebed.api.common.GetNetwork")
    @ResponseWrapper(localName = "getNetworkResponse", targetNamespace = "urn:CommonTypes", className = "eu.wisebed.api.common.GetNetworkResponse")
    public String getNetwork();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.GetVersionResponse")
    public String getVersion();

    /**
     * 
     * @param controllerEndpointUrl
     */
    @WebMethod
    @RequestWrapper(localName = "removeController", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.RemoveController")
    @ResponseWrapper(localName = "removeControllerResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.RemoveControllerResponse")
    public void removeController(
        @WebParam(name = "controllerEndpointUrl", targetNamespace = "")
        String controllerEndpointUrl);

    /**
     * 
     * @param nodes
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetNodes", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.ResetNodes")
    @ResponseWrapper(localName = "resetNodesResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.ResetNodesResponse")
    public String resetNodes(
        @WebParam(name = "nodes", targetNamespace = "")
        List<String> nodes);

    /**
     * 
     * @param message
     * @param nodeIds
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "send", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.Send")
    @ResponseWrapper(localName = "sendResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SendResponse")
    public String send(
        @WebParam(name = "nodeIds", targetNamespace = "")
        List<String> nodeIds,
        @WebParam(name = "message", targetNamespace = "")
        Message message);

    /**
     * 
     * @param channelHandlerConfigurations
     * @param nodes
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setChannelPipeline", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SetChannelPipeline")
    @ResponseWrapper(localName = "setChannelPipelineResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SetChannelPipelineResponse")
    public String setChannelPipeline(
        @WebParam(name = "nodes", targetNamespace = "")
        List<String> nodes,
        @WebParam(name = "channelHandlerConfigurations", targetNamespace = "")
        List<ChannelHandlerConfiguration> channelHandlerConfigurations);

    /**
     * 
     * @param targetNode
     * @param remoteServiceInstance
     * @param sourceNode
     * @param parameters
     * @param filters
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setVirtualLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SetVirtualLink")
    @ResponseWrapper(localName = "setVirtualLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.api.wsn.SetVirtualLinkResponse")
    public String setVirtualLink(
        @WebParam(name = "sourceNode", targetNamespace = "")
        String sourceNode,
        @WebParam(name = "targetNode", targetNamespace = "")
        String targetNode,
        @WebParam(name = "remoteServiceInstance", targetNamespace = "")
        String remoteServiceInstance,
        @WebParam(name = "parameters", targetNamespace = "")
        List<String> parameters,
        @WebParam(name = "filters", targetNamespace = "")
        List<String> filters);

}
